buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    group = "se.darknova"
    sourceCompatibility = '1.8'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile 'org.projectlombok:lombok:1.16.6'
        compile 'com.google.guava:guava:19.0-rc1'
        compile "com.google.inject:guice:$guiceVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"

        // logging backend
        compile "ch.qos.logback:logback-core:$logbackVersion"
        compile "ch.qos.logback:logback-classic:$logbackVersion"
        runtime "org.codehaus.groovy:groovy:$groovyVersion"
    }
}

project(':common') {
    dependencies {
        compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    }
}

project(':client') {
    apply plugin: 'application'
    apply plugin: 'docker'

    mainClassName = 'se.darknova.template.client.Main'

    docker {
        baseImage = 'rhuagh/java8-busybox-bash'
        applicationName = 'darknova-dns-client'
    }

    dependencies {
        compile project(':common')
        compile 'se.darknova:config-module:1.0-SNAPSHOT'
        compile 'se.darknova:http-client:1.0-SNAPSHOT'
    }
}

project(':service') {
    apply plugin: 'application'
    apply plugin: 'docker'

    mainClassName = 'se.darknova.template.service.Main'

    distDocker {
        exposePort 8241
        setEnvironment 'SERVICE_NAME', 'darknova-test'
        setEnvironment 'SERVICE_8241_TAGS', 'video'
    }

    docker {
        baseImage = 'rhuagh/java8-busybox-bash'
        applicationName = 'darknova-test-service'
    }

    dependencies {
        compile project(':common')
        compile 'se.darknova:service-module:1.0-SNAPSHOT'
        compile 'se.darknova:http-module:1.1-SNAPSHOT'
        compile 'se.darknova:config-module:1.0-SNAPSHOT'
        compile 'se.darknova:monitor-module:1.0-SNAPSHOT'
    }
}
