buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    group = "se.darknova"
    sourceCompatibility = '1.8'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile 'org.projectlombok:lombok:1.16.6'
        compile 'com.google.guava:guava:19.0-rc1'
        compile "com.google.inject:guice:$guiceVersion"
    }
}

project(':client') {
    apply plugin: 'application'
    apply plugin: 'docker'

    mainClassName = 'se.darknova.template.client.Main'

    docker {
        baseImage = 'darknova/java8'
        applicationName = 'darknova-dns-client'
    }

    dependencies {
        compile 'dnsjava:dnsjava:2.1.7'

    }
}

project(':service') {
    apply plugin: 'application'
    apply plugin: 'docker'

    mainClassName = 'se.darknova.template.service.jetty.Main'

    distDocker {
        exposePort 8080
        setEnvironment 'SERVICE_NAME', 'darknova-test'
        setEnvironment 'SERVICE_8080_TAGS', 'video'
        runCommand 'opkg-install bash'
    }

    docker {
        baseImage = 'darknova/java8'
        applicationName = 'darknova-test-service'
    }

    dependencies {
        compile "org.glassfish.jersey.core:jersey-common:$jerseyVersion"
        compile "org.glassfish.jersey.core:jersey-server:$jerseyVersion"
        compile "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
        compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"

        compile "org.eclipse.jetty:jetty-server:$jettyVersion"
        compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"

        compile "com.google.inject.extensions:guice-servlet:$guiceVersion"

        compile "org.glassfish.hk2:hk2:2.3.0-b05"
        compile "org.glassfish.hk2:guice-bridge:2.2.0"
    }
}
